"// clang-format off\n"
"void __builtin___asan_after_dynamic_init();\n"
"void __builtin___asan_before_dynamic_init(const void*);\n"
"void __builtin___asan_handle_no_return();\n"
"void __builtin___asan_init();\n"
"void __builtin___asan_load1(void*);\n"
"void __builtin___asan_load16(void*);\n"
"void __builtin___asan_load16_noabort(void*);\n"
"void __builtin___asan_load1_noabort(void*);\n"
"void __builtin___asan_load2(void*);\n"
"void __builtin___asan_load2_noabort(void*);\n"
"void __builtin___asan_load4(void*);\n"
"void __builtin___asan_load4_noabort(void*);\n"
"void __builtin___asan_load8(void*);\n"
"void __builtin___asan_load8_noabort(void*);\n"
"void __builtin___asan_report_load1(void*);\n"
"void __builtin___asan_report_load16(void*);\n"
"void __builtin___asan_report_load16_noabort(void*);\n"
"void __builtin___asan_report_load1_noabort(void*);\n"
"void __builtin___asan_report_load2(void*);\n"
"void __builtin___asan_report_load2_noabort(void*);\n"
"void __builtin___asan_report_load4(void*);\n"
"void __builtin___asan_report_load4_noabort(void*);\n"
"void __builtin___asan_report_load8(void*);\n"
"void __builtin___asan_report_load8_noabort(void*);\n"
"void __builtin___asan_report_store1(void*);\n"
"void __builtin___asan_report_store16(void*);\n"
"void __builtin___asan_report_store16_noabort(void*);\n"
"void __builtin___asan_report_store1_noabort(void*);\n"
"void __builtin___asan_report_store2(void*);\n"
"void __builtin___asan_report_store2_noabort(void*);\n"
"void __builtin___asan_report_store4(void*);\n"
"void __builtin___asan_report_store4_noabort(void*);\n"
"void __builtin___asan_report_store8(void*);\n"
"void __builtin___asan_report_store8_noabort(void*);\n"
"void __builtin___asan_store1(void*);\n"
"void __builtin___asan_store16(void*);\n"
"void __builtin___asan_store16_noabort(void*);\n"
"void __builtin___asan_store1_noabort(void*);\n"
"void __builtin___asan_store2(void*);\n"
"void __builtin___asan_store2_noabort(void*);\n"
"void __builtin___asan_store4(void*);\n"
"void __builtin___asan_store4_noabort(void*);\n"
"void __builtin___asan_store8(void*);\n"
"void __builtin___asan_store8_noabort(void*);\n"
"void __builtin___asan_version_mismatch_check_v8();\n"
"void __builtin___hwasan_handle_longjmp(const void*);\n"
"void __builtin___hwasan_init();\n"
"void __builtin___hwasan_load1(void*);\n"
"void __builtin___hwasan_load16(void*);\n"
"void __builtin___hwasan_load16_noabort(void*);\n"
"void __builtin___hwasan_load1_noabort(void*);\n"
"void __builtin___hwasan_load2(void*);\n"
"void __builtin___hwasan_load2_noabort(void*);\n"
"void __builtin___hwasan_load4(void*);\n"
"void __builtin___hwasan_load4_noabort(void*);\n"
"void __builtin___hwasan_load8(void*);\n"
"void __builtin___hwasan_load8_noabort(void*);\n"
"void __builtin___hwasan_store1(void*);\n"
"void __builtin___hwasan_store16(void*);\n"
"void __builtin___hwasan_store16_noabort(void*);\n"
"void __builtin___hwasan_store1_noabort(void*);\n"
"void __builtin___hwasan_store2(void*);\n"
"void __builtin___hwasan_store2_noabort(void*);\n"
"void __builtin___hwasan_store4(void*);\n"
"void __builtin___hwasan_store4_noabort(void*);\n"
"void __builtin___hwasan_store8(void*);\n"
"void __builtin___hwasan_store8_noabort(void*);\n"
"void __builtin___hwasan_tag_mismatch4(void*);\n"
"void* __builtin___hwasan_tag_pointer(const void*, unsigned char);\n"
"void __builtin___sanitizer_cov_trace_cmp1(unsigned char, unsigned char);\n"
"void __builtin___sanitizer_cov_trace_cmp2(uint16_t, uint16_t);\n"
"void __builtin___sanitizer_cov_trace_cmp4(uint32_t, uint32_t);\n"
"void __builtin___sanitizer_cov_trace_cmp8(uint64_t, uint64_t);\n"
"void __builtin___sanitizer_cov_trace_cmpd(double, double);\n"
"void __builtin___sanitizer_cov_trace_cmpf(float, float);\n"
"void __builtin___sanitizer_cov_trace_const_cmp1(unsigned char, unsigned char);\n"
"void __builtin___sanitizer_cov_trace_const_cmp2(uint16_t, uint16_t);\n"
"void __builtin___sanitizer_cov_trace_const_cmp4(uint32_t, uint32_t);\n"
"void __builtin___sanitizer_cov_trace_const_cmp8(uint64_t, uint64_t);\n"
"void __builtin___sanitizer_cov_trace_pc();\n"
"void __builtin___sanitizer_cov_trace_switch(uint64_t, void*);\n"
"void __builtin___tsan_atomic_signal_fence(int);\n"
"void __builtin___tsan_atomic_thread_fence(int);\n"
"void __builtin___tsan_func_entry(void*);\n"
"void __builtin___tsan_func_exit(void*);\n"
"void __builtin___tsan_init();\n"
"void __builtin___tsan_read1(void*);\n"
"void __builtin___tsan_read16(void*);\n"
"void __builtin___tsan_read2(void*);\n"
"void __builtin___tsan_read4(void*);\n"
"void __builtin___tsan_read8(void*);\n"
"void __builtin___tsan_volatile_read1(void*);\n"
"void __builtin___tsan_volatile_read16(void*);\n"
"void __builtin___tsan_volatile_read2(void*);\n"
"void __builtin___tsan_volatile_read4(void*);\n"
"void __builtin___tsan_volatile_read8(void*);\n"
"void __builtin___tsan_volatile_write1(void*);\n"
"void __builtin___tsan_volatile_write16(void*);\n"
"void __builtin___tsan_volatile_write2(void*);\n"
"void __builtin___tsan_volatile_write4(void*);\n"
"void __builtin___tsan_volatile_write8(void*);\n"
"void __builtin___tsan_vptr_update(void*, void*);\n"
"void __builtin___tsan_write1(void*);\n"
"void __builtin___tsan_write16(void*);\n"
"void __builtin___tsan_write2(void*);\n"
"void __builtin___tsan_write4(void*);\n"
"void __builtin___tsan_write8(void*);\n"
"void __builtin___ubsan_handle_add_overflow(void*, void*, void*);\n"
"void __builtin___ubsan_handle_add_overflow_abort(void*, void*, void*);\n"
"void __builtin___ubsan_handle_builtin_unreachable(void*);\n"
"void __builtin___ubsan_handle_divrem_overflow(void*, void*, void*);\n"
"void __builtin___ubsan_handle_divrem_overflow_abort(void*, void*, void*);\n"
"void __builtin___ubsan_handle_dynamic_type_cache_miss(void*, void*, void*);\n"
"void __builtin___ubsan_handle_dynamic_type_cache_miss_abort(void*, void*, void*);\n"
"void __builtin___ubsan_handle_float_cast_overflow(void*, void*);\n"
"void __builtin___ubsan_handle_float_cast_overflow_abort(void*, void*);\n"
"void __builtin___ubsan_handle_invalid_builtin(void*);\n"
"void __builtin___ubsan_handle_invalid_builtin_abort(void*);\n"
"void __builtin___ubsan_handle_load_invalid_value(void*, void*);\n"
"void __builtin___ubsan_handle_load_invalid_value_abort(void*, void*);\n"
"void __builtin___ubsan_handle_missing_return(void*);\n"
"void __builtin___ubsan_handle_mul_overflow(void*, void*, void*);\n"
"void __builtin___ubsan_handle_mul_overflow_abort(void*, void*, void*);\n"
"void __builtin___ubsan_handle_negate_overflow(void*, void*);\n"
"void __builtin___ubsan_handle_negate_overflow_abort(void*, void*);\n"
"void __builtin___ubsan_handle_nonnull_arg(void*);\n"
"void __builtin___ubsan_handle_nonnull_arg_abort(void*);\n"
"void __builtin___ubsan_handle_nonnull_return(void*);\n"
"void __builtin___ubsan_handle_nonnull_return_abort(void*);\n"
"void __builtin___ubsan_handle_nonnull_return_v1(void*, void*);\n"
"void __builtin___ubsan_handle_nonnull_return_v1_abort(void*, void*);\n"
"void __builtin___ubsan_handle_out_of_bounds(void*, void*);\n"
"void __builtin___ubsan_handle_out_of_bounds_abort(void*, void*);\n"
"void __builtin___ubsan_handle_pointer_overflow(void*, void*, void*);\n"
"void __builtin___ubsan_handle_pointer_overflow_abort(void*, void*, void*);\n"
"void __builtin___ubsan_handle_shift_out_of_bounds(void*, void*, void*);\n"
"void __builtin___ubsan_handle_shift_out_of_bounds_abort(void*, void*, void*);\n"
"void __builtin___ubsan_handle_sub_overflow(void*, void*, void*);\n"
"void __builtin___ubsan_handle_sub_overflow_abort(void*, void*, void*);\n"
"void __builtin___ubsan_handle_type_mismatch(void*, void*);\n"
"void __builtin___ubsan_handle_type_mismatch_abort(void*, void*);\n"
"void __builtin___ubsan_handle_type_mismatch_v1(void*, void*);\n"
"void __builtin___ubsan_handle_type_mismatch_v1_abort(void*, void*);\n"
"void __builtin___ubsan_handle_vla_bound_not_positive(void*, void*);\n"
"void __builtin___ubsan_handle_vla_bound_not_positive_abort(void*, void*);\n"
"// clang-format on\n"
